<?php 

$test_srting = 'Число 1, 911, обогреватель, ШКАФ 606-33/ИВ20, Число';

$help = 'Искать строку в подстроке';
show_result("/Число/", $test_srting, $help);

$help = 'Квадратные скобки ограничивают поиск теми символами, которые в них заключены';
show_result("/[Число]/", $test_srting, $help);

$help = 'Найти все буквы алфавита';
show_result("/[а-яА-Я]/", $test_srting, $help);

$help = 'Точка "." - любой символ';
show_result("/.исло/", $test_srting, $help);

$help = 'Ветви или оператор ИЛИ "|" - разделение поисковых символов';
show_result("/ШКАФ|обогреватель/", $test_srting, $help);

$help = 'Для исключения последовательности символов из поиска перед этой ней ставится символ "^" ВНУТРИ []!!!';
show_result("/[^ШКАФ]/", $test_srting, $help);

$help = '^ - начало строки, $ - конец строки, для экранирования ставится \ перед спец. символами';
show_result("/^Число|Число$|\//", $test_srting, $help);

echo 'Perl-совместимые регулярные выражения <br />';

$help = 'Модификаторы. /search/mod : i - игнорирование регистра; x - игнорирование пробелов';
show_result("/ШКА ф /xi", $test_srting, $help);



echo 'Регулярное выражение можно уточнить при помощи квалификаторов - так называются символы +, ?, *. <br />';
echo 'Квалификаторы говорят о том, сколько раз последовательность символов может встретиться в строке <br />';
echo 'и указываются непосредственно после той части выражения, к которой они применяются.<br />';
echo '"a+" - хотя бы один а (строки "абв" и "абва" соответствуют этому выражению, а строка "укр" - нет);<br />';
echo '"a?" - ноль или один а (строки "абв" и "укр" соответствуют этому выражению, а строка "абва" - нет);<br />';
echo '"a*" - ноль или более а (строки "абв" и "абва" и "укр" соответствуют этому выражению).;<br /><br />';

echo 'Границы - это числа в фигурных скобках, указывающие количество вхождений в строку фрагмента выражения, непосредственно предшествующего границе:

    "xy{2}" соответствует строке, в которой за x следует два y;
    "xy{2,}" соответствует строке, в которой за x следует не менее двух y (может быть и больше);
    "xy{2,6}" соответствует строке, в которой за x следует от двух до шести y;

Для указания количества вхождений не одного символа, а их последовательности, используются круглые скобки:

    "x(yz){2,6}" соответствует строке, в которой за x следует от двух до шести последовательностей yz;
    "x(yz)*" соответствует строке, в которой за x следует ноль и более последовательностей yz';



function show_result($template, $string, $help){
	$count =  preg_match_all($template, $string, $maches/*, PREG_OFFSET_CAPTURE*/); //Возвращает с позициями

	echo $help.'<br />';
	echo "Шаблон: \"{$template}\" <br />";
	echo "Совпадений: {$count} <br />";
	
	if(!empty($maches)){
		$result  = 'Результат: ';
		$result .= '['.implode ( '] [' , $maches[0]).'.]';
		echo $result.'<br />';
	}
	
	echo "Строка : {$string} <br />";
	echo '<br />';
}
